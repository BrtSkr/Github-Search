{"version":3,"sources":["src/js/API.js","src/js/App.js"],"names":["searchBar","document","querySelector","names","querySelectorAll","fetchButton","closeError","loadInfo","user_api","repo_api","avatar","username","userURL","creationDate","dataLocation","fetch","then","response","processing","json","ok","console","log","style","transform","processed","src","avatar_url","textContent","name","html_url","created_at","slice","location","jsonResponse","repoParent","firstChild","remove","i","length","repoChild","createElement","classList","add","appendChild","closeErrorPopup","addEventListener","searchedUser","GITHUB_USER","value","GITHUB_REPO"],"mappings":";AAAA,IAAMA,EAAYC,SAASC,cAAc,iBACnCC,EAAQF,SAASG,iBAAiB,gBAClCC,EAAcJ,SAASC,cAAc,gBACrCI,EAAaL,SAASC,cAAc,gBAEpCK,EAAW,SAACC,EAAUC,GACpBC,IAAAA,EAAST,SAASC,cAAc,iBAChCS,EAAWV,SAASC,cAAc,mBAClCU,EAAUX,SAASC,cAAc,cACjCW,EAAeZ,SAASC,cAAc,wBACtCY,EAAeb,SAASC,cAAc,mBAI1Ca,MAAMP,GACHQ,KAAK,SAACC,GACCC,IAAAA,EAAaD,EAASE,OAExBF,OAAAA,EAASG,IACXC,QAAQC,IAAI,aACLJ,GAEJD,EAASG,QAAV,GACFd,EAAWiB,MAAMC,UAAY,qBAC7BH,QAAQC,IAAI,mBAIfN,KAAK,SAACS,GACLf,EAAOgB,IAAMD,EAAUE,WACvBhB,EAASiB,YAAcH,EAAUI,KACjCjB,EAAQgB,YAAcH,EAAUK,SAChCjB,EAAae,YAA8BH,gBAAAA,OAAAA,EAAUM,WAAWC,MAC9D,EACA,IAFF,KAIAlB,EAAac,YAAcH,EAAUQ,SACrCZ,QAAQC,IAAIG,KAKhBV,MAAMN,GACHO,KAAK,SAACC,GAEEiB,OADcjB,EAASE,SAG/BH,KAAK,SAACS,GAGEU,IAFDA,IAAAA,EAAalC,SAASC,cAAc,SAEnCiC,EAAWC,YAChBD,EAAWC,WAAWC,SAKnB,IAAA,IAAIC,EAAI,EAAGA,EAAIb,EAAUc,OAAQD,IAAK,CACnCE,IAAAA,EAAYvC,SAASwC,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cACxBH,EAAUZ,YAAc,CAACH,EAAUa,GAAGT,MACtCM,EAAWS,YAAYJ,OAS3BK,EAAkB,WACtBvC,EAAWiB,MAAMC,UAAY,sBAG/BlB,EAAWwC,iBAAiB,QAASD,GAGrCxC,EAAYyC,iBAAiB,QAAS,WAC9BC,IAAAA,EAAe9C,SAASC,cAAc,iBAExC8C,EAAc,gCAAkCD,EAAaE,MAC7DC,EACF,gCAAkCH,EAAaE,MAAQ,SACzD5B,QAAQC,IAAI0B,EAAaE,GACzB3C,EAASyC,EAAaE;;ACnFxB,aAAA,QAAA","file":"App.bd102a78.js","sourceRoot":"..","sourcesContent":["const searchBar = document.querySelector(\".search-input\");\nconst names = document.querySelectorAll(\".result-info\");\nconst fetchButton = document.querySelector(\"[data-fetch]\");\nconst closeError = document.querySelector('.error-popup');\n\nconst loadInfo = (user_api, repo_api) => {\n  const avatar = document.querySelector(\"[data-avatar]\");\n  const username = document.querySelector(\"[data-username]\");\n  const userURL = document.querySelector(\"[data-url]\");\n  const creationDate = document.querySelector(\"[data-creation-date]\");\n  const dataLocation = document.querySelector(\"[data-location]\");\n\n  //loads information about user such as avatar, username, github URL\n  const userInformation = () => {\n    fetch(user_api)\n      .then((response) => {\n        const processing = response.json();\n       \n        if (response.ok) {\n          console.log('uff works')\n          return processing;\n        }\n        if (!response.ok) {\n          closeError.style.transform = 'translateY(0)'\n          console.log('damn majster')\n          return\n        }\n      })\n      .then((processed) => {\n        avatar.src = processed.avatar_url;\n        username.textContent = processed.name;\n        userURL.textContent = processed.html_url;\n        creationDate.textContent = `Created at : ${processed.created_at.slice(\n          0,\n          10\n        )} `;\n        dataLocation.textContent = processed.location;\n        console.log(processed);\n      });\n  };\n  //loads infomartion about user's repositories\n  const userRipos = () => {\n    fetch(repo_api)\n      .then((response) => {\n        const jsonResponse = response.json();\n        return jsonResponse;\n      })\n      .then((processed) => {\n        const repoParent = document.querySelector(\".repo\"); //parent where elements will be created\n        //makes sure that there are no multiple same elements (and elements from previous search)\n        while (repoParent.firstChild) {\n          repoParent.firstChild.remove();\n        }\n\n        //creates elements that equal a number of repositories of a user\n        //elements contain name of a repository\n        for (var i = 0; i < processed.length; i++) {\n          const repoChild = document.createElement(\"div\");\n          repoChild.classList.add(\"repo-child\");\n          repoChild.textContent = [processed[i].name];\n          repoParent.appendChild(repoChild);\n        }\n      });\n  };\n\n  userInformation();\n  userRipos();\n};\n\nconst closeErrorPopup = () => {\n  closeError.style.transform = 'translateY(-100vh)';\n}\n\ncloseError.addEventListener('click', closeErrorPopup);\n//on clicking the search button it checks the input value and later adds it to API as a string\n//to later retrieve information about a user\nfetchButton.addEventListener(\"click\", () => {\n  const searchedUser = document.querySelector(\"[data-search]\"); //data input\n\n  let GITHUB_USER = \"https://api.github.com/users/\" + searchedUser.value;\n  let GITHUB_REPO =\n    \"https://api.github.com/users/\" + searchedUser.value + \"/repos\";\n  console.log(GITHUB_USER, GITHUB_REPO);\n  loadInfo(GITHUB_USER, GITHUB_REPO);\n});\n","import \"./API.js\";\n\n\n\n\n\n\n\n"]}