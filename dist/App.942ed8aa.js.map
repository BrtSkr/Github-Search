{"version":3,"sources":["src/js/API.js","src/js/App.js"],"names":["searchBar","document","querySelector","names","querySelectorAll","fetchButton","closeError","loadInfo","user_api","repo_api","avatar","username","userURL","creationDate","dataLocation","userInformation","fetch","then","response","processing","json","ok","console","log","style","transform","processed","src","avatar_url","textContent","name","html_url","created_at","slice","location","userRipos","jsonResponse","repoParent","firstChild","remove","i","length","repoChild","createElement","classList","add","appendChild","closeErrorPopup","addEventListener","searchedUser","GITHUB_USER","value","GITHUB_REPO"],"mappings":"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","file":"App.942ed8aa.js","sourceRoot":"..","sourcesContent":["const searchBar = document.querySelector(\".search-input\");\nconst names = document.querySelectorAll(\".result-info\");\nconst fetchButton = document.querySelector(\"[data-fetch]\");\nconst closeError = document.querySelector('.error-popup');\n\nconst loadInfo = (user_api, repo_api) => {\n  const avatar = document.querySelector(\"[data-avatar]\");\n  const username = document.querySelector(\"[data-username]\");\n  const userURL = document.querySelector(\"[data-url]\");\n  const creationDate = document.querySelector(\"[data-creation-date]\");\n  const dataLocation = document.querySelector(\"[data-location]\");\n\n  //loads information about user such as avatar, username, github URL\n  const userInformation = () => {\n    fetch(user_api)\n      .then((response) => {\n        const processing = response.json();\n       \n        if (response.ok) {\n          console.log('uff works')\n          return processing;\n        }\n        if (!response.ok) {\n          closeError.style.transform = 'translateY(0)'\n          console.log('damn majster')\n          return\n        }\n      })\n      .then((processed) => {\n        avatar.src = processed.avatar_url;\n        username.textContent = processed.name;\n        userURL.textContent = processed.html_url;\n        creationDate.textContent = `Created at : ${processed.created_at.slice(\n          0,\n          10\n        )} `;\n        dataLocation.textContent = processed.location;\n        console.log(processed);\n      });\n  };\n  //loads infomartion about user's repositories\n  const userRipos = () => {\n    fetch(repo_api)\n      .then((response) => {\n        const jsonResponse = response.json();\n        return jsonResponse;\n      })\n      .then((processed) => {\n        const repoParent = document.querySelector(\".repo\"); //parent where elements will be created\n        //makes sure that there are no multiple same elements (and elements from previous search)\n        while (repoParent.firstChild) {\n          repoParent.firstChild.remove();\n        }\n\n        //creates elements that equal a number of repositories of a user\n        //elements contain name of a repository\n        for (var i = 0; i < processed.length; i++) {\n          const repoChild = document.createElement(\"div\");\n          repoChild.classList.add(\"repo-child\");\n          repoChild.textContent = [processed[i].name];\n          repoParent.appendChild(repoChild);\n        }\n      });\n  };\n\n  userInformation();\n  userRipos();\n};\n\nconst closeErrorPopup = () => {\n  closeError.style.transform = 'translateY(-100vh)';\n}\n\ncloseError.addEventListener('click', closeErrorPopup);\n//on clicking the search button it checks the input value and later adds it to API as a string\n//to later retrieve information about a user\nfetchButton.addEventListener(\"click\", () => {\n  const searchedUser = document.querySelector(\"[data-search]\"); //data input\n\n  let GITHUB_USER = \"https://api.github.com/users/\" + searchedUser.value;\n  let GITHUB_REPO =\n    \"https://api.github.com/users/\" + searchedUser.value + \"/repos\";\n  console.log(GITHUB_USER, GITHUB_REPO);\n  loadInfo(GITHUB_USER, GITHUB_REPO);\n});\n","import \"./API.js\";\n\n\n\n\n\n\n\n"]}